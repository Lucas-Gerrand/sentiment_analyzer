<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">
 	<bean id="socialBean" class="at.tuwien.sentimentanalyzer.beans.SocialBean" />
 	
    <!-- this is the included XML file where we include only the routeContext -->
    <routeContext id="ProfaneRoutes" xmlns="http://camel.apache.org/schema/spring">
        <!-- searches for the profanity in database -->
        <route id="ProfaneRoutes">
			<!--<from uri="hibernate:at.tuwien.sentimentanalyzer.entities." /> -->
			
			<!--  Some kind of profanity filter here -->
			<!--<to uri="hibernate:at.tuwien.sentimentanalyzer.entities." /> -->
			
			<!--  Some kind of non-profanity filter here -->
			<!--<to uri="hibernate:at.tuwien.sentimentanalyzer.entities." /> -->


			
			<!--Save tweet to the database-->
			<!--<transform>
				<method ref="socialBean" method="generateSocial"/>
			</transform>
			<to uri="hibernate:at.tuwien.sentimentanalyzer.entities.SocialMessages"/>
			<to uri="log:DBtweets" />-->
			
			<!--Save tweet to CSV-->
			<!--<bean ref="messageToMapBean"/> -->
			<!--<to uri="log:mapper" /> -->
			<!--<marshal> -->
			<!--	<csv /> -->
			<!--</marshal> -->
			<!--<to uri="log:csv" /> -->
			
			
			<!-- Note it simply overwrites the old file at the moment. Create a bean to read the file and add the new data (I think) -->
			<!--<to uri="file://searches/?fileName=${date:now:yyyyMMdd}/{{search.term}}.csv"/> -->
        </route>

		
    </routeContext>
 
</beans>
